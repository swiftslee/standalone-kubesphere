---
# Source: ks-core-outside-cluster/templates/ks-apiserver.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-apiserver
  labels:
    app: ks-apiserver
    tier: backend
    version: v3.1.0
  name: ks-apiserver
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: ks-apiserver
    tier: backend
    # version: v3.1.0
  type: ClusterIP
---
# Source: ks-core-outside-cluster/templates/ks-apiserver.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v3.1.0
  name: ks-apiserver
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
      # version: v3.1.0
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
        # version: v3.1.0
    spec:
      containers:
      - command:
        - ks-apiserver
        - --logtostderr=true
        - --kubeconfig=/etc/kubeconfig/kubeconfig
        image: kubesphere/ks-apiserver:v3.1.0
        imagePullPolicy: IfNotPresent
        name: ks-apiserver
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /etc/kubesphere/ingress-controller
          name: ks-router-config
        - mountPath: /etc/kubesphere/
          name: kubesphere-config
        - mountPath: /etc/localtime
          name: host-time
        - mountPath: /etc/kubeconfig
          name: kubeconfig
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /kapis/version
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 15
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
      volumes:
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: docker-sock
      - configMap:
          defaultMode: 420
          name: ks-router-config
        name: ks-router-config
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time
      - configMap:
          defaultMode: 420
          name: kubeconfig
        name: kubeconfig
